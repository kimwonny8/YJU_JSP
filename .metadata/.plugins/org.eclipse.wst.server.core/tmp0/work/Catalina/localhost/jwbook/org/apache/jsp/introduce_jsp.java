/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-31 01:08:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class introduce_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\"\r\n");
      out.write("	href=\"https://cdn-icons-png.flaticon.com/512/473/473614.png\">\r\n");
      out.write("<title>IntroduceJW</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("	background: url(img/desk.jpg) no-repeat center;\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	animation: change 0.5s ease forwards;\r\n");
      out.write("	height: 90vh;\r\n");
      out.write("	width: 90vw;\r\n");
      out.write("	padding-top: 1vh;\r\n");
      out.write("	background: url(img/bookbg.png) no-repeat center;\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes change{\r\n");
      out.write("from {\r\n");
      out.write(" transform: translateX(100%);\r\n");
      out.write(" visibility: visible;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("to {\r\n");
      out.write("	transform: translateX(0%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".contentLeft>img {\r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("	box-shadow: 3px 5px 5px grey;\r\n");
      out.write("	width: 20vw;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentLeft>p {\r\n");
      out.write("	font-size: 5vh;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 1vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentLeft {\r\n");
      out.write("	height: 80vh;\r\n");
      out.write("	width: 45vw;\r\n");
      out.write("	float: left;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentRight {\r\n");
      out.write("	height: 80vh;\r\n");
      out.write("	width: 45vw;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentRight>p {\r\n");
      out.write("	margin-top: 2vh;\r\n");
      out.write("	font-size: 22px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentRight>button>img {\r\n");
      out.write("	width: 10vw;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentRight>button>img:hover {\r\n");
      out.write("	border-radius: 50%;\r\n");
      out.write("	background-color: gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contentRight>button {\r\n");
      out.write("	border: none;\r\n");
      out.write("	background: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu {\r\n");
      out.write("	width: 85vw;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	margin-left: 1vw;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu>button {\r\n");
      out.write("	border: none;\r\n");
      out.write("	background: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu>button>img {\r\n");
      out.write("	width: 5vw;\r\n");
      out.write("	height: 10vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu>button>img:hover {\r\n");
      out.write("	transform: scale(1.2);\r\n");
      out.write("	transition: all 300ms ease-in;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"contentLeft\">\r\n");
      out.write("			<p>자기소개</p>\r\n");
      out.write("			<img src=\"img/jw.jpg\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"contentRight\">\r\n");
      out.write("			<p>이름 : 김정원</p>\r\n");
      out.write("			<p>생년월일 : 1997. 1. 17</p>\r\n");
      out.write("			<p>MBTI : ESTP</p>\r\n");
      out.write("			<p>혈액형 : B형</p>\r\n");
      out.write("			<p>이메일 : kimwonny8@gmail.com</p>\r\n");
      out.write("			<p></p>\r\n");
      out.write("			<button onclick=\"location.href='http://github.com/kimwonny8'\">\r\n");
      out.write("				<img src=\"img/github.png\" />\r\n");
      out.write("			</button>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"menu\">\r\n");
      out.write("			<button onclick=\"location.href='main.jsp'\">\r\n");
      out.write("				<img src=\"img/left.png\" />\r\n");
      out.write("			</button>\r\n");
      out.write("			<button onclick=\"location.href='hobby.jsp'\">\r\n");
      out.write("				<img src=\"img/right.png\" />\r\n");
      out.write("			</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
